<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.business.user.core.dao.TeacherDao">

    <resultMap type="com.qf.data.user.entity.Teacher" id="TeacherMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="header" column="header" jdbcType="VARCHAR"/>
        <result property="info" column="info" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into educationdb.teacher(email, name, sex, birthday, header, info, create_time, update_time, status, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.email}, #{entity.name}, #{entity.sex}, #{entity.birthday}, #{entity.header}, #{entity.info}, #{entity.createTime}, #{entity.updateTime}, #{entity.status}, #{entity.delFlag})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into educationdb.teacher(email, name, sex, birthday, header, info, create_time, update_time, status, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.email}, #{entity.name}, #{entity.sex}, #{entity.birthday}, #{entity.header}, #{entity.info}, #{entity.createTime}, #{entity.updateTime}, #{entity.status}, #{entity.delFlag})
        </foreach>
        on duplicate key update
         email = values(email) , name = values(name) , sex = values(sex) , birthday = values(birthday) , header = values(header) , info = values(info) , create_time = values(create_time) , update_time = values(update_time) , status = values(status) , del_flag = values(del_flag)     </insert>

</mapper>

